plugins {
    id "maven-publish"
    id "jacoco"
    id "com.github.kt3k.coveralls" version "2.5.0-x"
}
apply plugin: 'com.android.library'

def versionMajor = 0
def versionMinor = 0
def versionPatch = 6
def myVersionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
def myVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdk 27
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdk 27
        targetSdk 27
        versionCode myVersionCode
        versionName myVersionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'com.android.support:support-annotations:27.1.0'
}

// https://stackoverflow.com/a/34572606/1251958
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompiler.classpath.files
    })
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    getClassDirectories().setFrom(fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['eu/darken/R*.class',
                       '**/BuildConfig.class'
            ]))
    getSourceDirectories().setFrom(files([
            'src/main/java'
    ]))
    getExecutionData().setFrom(files('build/jacoco/testDebugUnitTest.exec'))
}

coveralls {
    jacocoReportPath = 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
    sourceDirs = ['src/main/java']
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/TECH7Fox/myolib")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
}